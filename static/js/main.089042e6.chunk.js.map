{"version":3,"sources":["components/Nav.js","components/Items.js","components/ToDosContainer.js","components/ToDonesContainer.js","components/App.js","index.js"],"names":["Nav","Item","props","icon","info","status","text","_id","className","ToDosContainer","jsxBoilerPlate","data","map","todo","Items","key","ToDonesContainer","App","state","toDos","fetch","process","then","response","json","console","log","setState","items","this","sortTodos","filter","item","sortTodones","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uNAYeA,G,MAVH,WACZ,OACE,6BACE,qCACA,kDCeWC,EAnBF,SAACC,GACZ,IAAIC,EADkB,EAEID,EAAME,KAA3BC,EAFiB,EAEjBA,OAAaC,GAFI,EAETC,IAFS,EAEJD,MAKlB,OAHWH,EAARE,EAAe,wCACP,wCAGT,oCACC,yBAAKG,UAAWH,EAAS,SAAW,YACnC,2BAAIC,GACJ,gCACGH,MCMMM,EAjBQ,SAACP,GAAW,IAK7BQ,EAHSR,EAARS,KAGqBC,KAAI,SAAAC,GAC5B,OAAO,kBAACC,EAAD,CAAOC,IAAKF,EAAKN,IAAKH,KAAMS,OAGrC,OACE,yBAAKL,UAAU,mBACb,uCACA,yBAAKA,UAAU,UAAUE,KCIhBM,EAhBU,SAACd,GAAW,IAI/BQ,EAFSR,EAARS,KAEqBC,KAAI,SAAAC,GAAI,OAChC,kBAACC,EAAD,CAAOC,IAAKF,EAAKN,IAAKH,KAAMS,OAG9B,OACA,yBAAKL,UAAU,mBACf,qCACA,yBAAKA,UAAU,YAAYE,KC6BdO,E,kDAlCb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CAACC,MAAO,IAFJ,E,gEAKE,IAAD,OAGlBC,MAFcC,oCAGbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAX,GACJc,QAAQC,IAAIf,GACZ,EAAKgB,SAAS,CAACR,MAAOR,S,+BAMxB,IAAIiB,EAAQC,KAAKX,MAAMC,MACnBW,EAAYF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAK3B,UACtC4B,EAAcL,EAAMG,QAAO,SAAAC,GAAI,OAAKA,EAAK3B,UAE7C,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,CAAgBG,KAAMmB,IACtB,kBAAC,EAAD,CAAkBnB,KAAMsB,U,GA7BhBC,IAAMC,WCFxBC,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.089042e6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = () => {\nreturn (\n  <nav>\n    <p>ToDo's</p>\n    <small>Plamen Mitev</small>\n  </nav>\n)\n\n}\n\nexport default Nav;","import React from 'react';\n\nconst Item = (props) => {\n  let icon;\n  let {status, _id, text} = props.info;\n\n  if(status) icon = <span>&#9997;</span>;\n  else icon =<span>&#10006;</span>;\n\n  return(\n    <>\n     <div className={status ? 'to-dos' : 'to-dones'}>\n      <p>{text}</p>\n      <button>\n        {icon}\n      </button>\n     </div>\n    </>\n  )\n}\n\nexport default Item;","import React from 'react';\nimport Items from './Items';\n\nconst ToDosContainer = (props) => {\n\n  let {data} = props;\n\n\n  let jsxBoilerPlate = data.map(todo => {\n    return <Items key={todo._id} info={todo}/>\n  })\n\n  return(\n    <div className=\"todos-container\">\n      <h2>TO DO'S</h2>\n      <div className='to-dos'>{jsxBoilerPlate}</div>\n    </div>\n  )\n}\n\nexport default ToDosContainer;","import React from 'react';\nimport Items from './Items';\n\nconst ToDonesContainer = (props) => {\n\n  let {data} = props;\n\n  let jsxBoilerPlate = data.map(todo => (\n    <Items key={todo._id} info={todo}/>\n  ))\n\n  return(\n  <div className=\"todos-container\">\n  <h2>DONES</h2>\n  <div className=\"to-dones\">{jsxBoilerPlate}</div>\n  </div>\n  )\n}\n\nexport default ToDonesContainer;","import React from 'react';\nimport '../scss/App.scss';\nimport Nav from './Nav';\n\nimport ToDosContainer from './ToDosContainer';\nimport ToDonesContainer from './ToDonesContainer';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {toDos: []}\n  }\n\n  componentDidMount() {\n    let API_URL = process.env.REACT_APP_API_URL\n    \n    fetch(API_URL)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({toDos: data})\n    })\n  }\n\n\n  render() {\n    let items = this.state.toDos;\n    let sortTodos = items.filter(item => item.status);\n    let sortTodones = items.filter(item => !item.status);\n\n    return (\n      <div className=\"App\">\n        <Nav />\n        <main>\n          <ToDosContainer data={sortTodos}/>\n          <ToDonesContainer data={sortTodones}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}